spring.datasource.url=jdbc:postgresql://localhost:5432/analyzer
spring.datasource.username=dbuser
spring.datasource.password=12345

spring.sql.init.mode=always

spring.output.ansi.enabled=ALWAYS

spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=ru.yandex.practicum.deserializer.SensorEventDeserializer
spring.kafka.consumer.client-id=sensor-consumer
spring.kafka.consumer.group-id=group-practicum
spring.kafka.consumer.max-poll-records=100
spring.kafka.consumer.fetch-max-bytes=3072000
spring.kafka.consumer.max-partition-fetch-bytes=307200
spring.kafka.consumer.consume-attempts-timeout-ms=1000

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=ru.yandex.practicum.serializer.AvroSerializer

spring.kafka.topics.sensor-topic=telemetry.sensors.v1
spring.kafka.topics.hub-topic=telemetry.hubs.v1
spring.kafka.topics.snapshot-topic=telemetry.snapshots.v1

grpc.client.hub-router.address=localhost:59090
grpc.client.hub-router.enableKeepAlive=true
grpc.client.hub-router.keepAliveWithoutCalls=true